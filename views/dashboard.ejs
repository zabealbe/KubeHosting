<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">

  <meta name="csrf-token" content="<%= csrfToken %>">
  <meta name="user_slots" content="10">

  <title>Dashboard</title>

  <link rel="stylesheet" href="/css/main.css">

  <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.24.0/moment.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.8.0/chart.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/moment.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/chartjs-adapter-moment/1.0.0/chartjs-adapter-moment.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datasource-prometheus/dist/chartjs-plugin-datasource-prometheus.umd.min.js"></script>

  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&display=swap"
    rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
  <link href="https://fonts.googleapis.com/css2?family=DM+Mono:wght@300&family=Inter:wght@100;200;300;400;500;600;700;800&display=swap" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>

  <style>
    .pod+button {
      opacity: 0;
    }

    .pod:focus+button {
      opacity: 1;
    }

    .charts {
      width: 100%;
      height: 350px;
    }

    #services-table {
      table-layout: fixed;
    }

    #services-table .pods {
      font-family: 'DM Mono', monospace;
    }

    #services-table .form-check-input:checked {
      background-color: var(--bs-success);
      border-color: var(--bs-success);
    }
    #services-table .form-check-input {
      transform: scale(1.1);
    }

    .service-logs, .service-logs td, .service-logs div {
      padding: 0;
    }

    .service-logs pre {
      margin: 0;
      font-family: 'DM Mono', monospace;
    }

    .service td{
      border-bottom-width: 0;
    }

    .chart-container {
      position: relative;
      display: flex;
      justify-content: center;
      align-items: center;
      line-height: 1.4;
    }

    .chart-container .center {
      text-align: center;
      position: absolute;
      margin-top: 25px;
    }

    .chart-container .center svg {
      vertical-align: top;
      margin-top: 2.3px;
    }

    .chart-container .info {
      position: relative;
      display: inline-block;
      opacity: .9;
      cursor: help;
    }

    .chart-container .info .info-popup {
      visibility: hidden;
      width: 160px;
      color: #fff;
      text-align: center;
      position: absolute;
      z-index: 1;
      bottom: 0%;
      left: 50%;
      margin-left: -80px;
      padding-bottom: 30px;
    }

    .chart-container .info .info-popup-content {
      position: relative;
      padding: 5px 10px;
      background-color: black;
      border-radius: 6px;
    }

    .chart-container .info .info-popup-content::after {
      content: "";
      position: absolute;
      top: 100%;
      left: 50%;
      margin-left: -5px;
      border-width: 5px;
      border-style: solid;
      border-color: black transparent transparent transparent;
    }

    .chart-container .info:hover .info-popup {
      visibility: visible;
    }
    .chart-container .info .info-popup:hover {
      visibility: visible;
    }
  </style>
</head>

<body>
  <template id="service-row">
    <tr class="service">
      <td role="service-activate">
        <div class="d-flex align-items-center my-1">
          <div class="form-check form-switch">
            <input class="form-check-input" type="checkbox">
          </div>
        </div>
      </td>
      <td role="service-name">
          service name
      </td>
      <td role="service-uri" class="d-none d-lg-table-cell align-middle">
          <a href=""></a>
      </td>
      <td role="service-status">
        <div class="d-flex align-items-center my-1">

        </div>
      </td>
      <td role="service-settings">
        <button class="btn btn-sm btn-outline-primary mx-1">
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-gear my-1" viewBox="0 0 16 16">
            <path d="M8 4.754a3.246 3.246 0 1 0 0 6.492 3.246 3.246 0 0 0 0-6.492zM5.754 8a2.246 2.246 0 1 1 4.492 0 2.246 2.246 0 0 1-4.492 0z"/>
            <path d="M9.796 1.343c-.527-1.79-3.065-1.79-3.592 0l-.094.319a.873.873 0 0 1-1.255.52l-.292-.16c-1.64-.892-3.433.902-2.54 2.541l.159.292a.873.873 0 0 1-.52 1.255l-.319.094c-1.79.527-1.79 3.065 0 3.592l.319.094a.873.873 0 0 1 .52 1.255l-.16.292c-.892 1.64.901 3.434 2.541 2.54l.292-.159a.873.873 0 0 1 1.255.52l.094.319c.527 1.79 3.065 1.79 3.592 0l.094-.319a.873.873 0 0 1 1.255-.52l.292.16c1.64.893 3.434-.902 2.54-2.541l-.159-.292a.873.873 0 0 1 .52-1.255l.319-.094c1.79-.527 1.79-3.065 0-3.592l-.319-.094a.873.873 0 0 1-.52-1.255l.16-.292c.893-1.64-.902-3.433-2.541-2.54l-.292.159a.873.873 0 0 1-1.255-.52l-.094-.319zm-2.633.283c.246-.835 1.428-.835 1.674 0l.094.319a1.873 1.873 0 0 0 2.693 1.115l.291-.16c.764-.415 1.6.42 1.184 1.185l-.159.292a1.873 1.873 0 0 0 1.116 2.692l.318.094c.835.246.835 1.428 0 1.674l-.319.094a1.873 1.873 0 0 0-1.115 2.693l.16.291c.415.764-.42 1.6-1.185 1.184l-.291-.159a1.873 1.873 0 0 0-2.693 1.116l-.094.318c-.246.835-1.428.835-1.674 0l-.094-.319a1.873 1.873 0 0 0-2.692-1.115l-.292.16c-.764.415-1.6-.42-1.184-1.185l.159-.291A1.873 1.873 0 0 0 1.945 8.93l-.319-.094c-.835-.246-.835-1.428 0-1.674l.319-.094A1.873 1.873 0 0 0 3.06 4.377l-.16-.292c-.415-.764.42-1.6 1.185-1.184l.292.159a1.873 1.873 0 0 0 2.692-1.115l.094-.319z"/>
          </svg>
          Edit
        </button>
      </td>
      <td role="service-toggle-logs">
        <button type="button" class="btn btn-sm btn-outline-dark collapsed mx-1" data-bs-toggle="collapse">
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-gear my-1" viewBox="0 0 16 16">
            <path d="M8 4.754a3.246 3.246 0 1 0 0 6.492 3.246 3.246 0 0 0 0-6.492zM5.754 8a2.246 2.246 0 1 1 4.492 0 2.246 2.246 0 0 1-4.492 0z"/>
            <path d="M9.796 1.343c-.527-1.79-3.065-1.79-3.592 0l-.094.319a.873.873 0 0 1-1.255.52l-.292-.16c-1.64-.892-3.433.902-2.54 2.541l.159.292a.873.873 0 0 1-.52 1.255l-.319.094c-1.79.527-1.79 3.065 0 3.592l.319.094a.873.873 0 0 1 .52 1.255l-.16.292c-.892 1.64.901 3.434 2.541 2.54l.292-.159a.873.873 0 0 1 1.255.52l.094.319c.527 1.79 3.065 1.79 3.592 0l.094-.319a.873.873 0 0 1 1.255-.52l.292.16c1.64.893 3.434-.902 2.54-2.541l-.159-.292a.873.873 0 0 1 .52-1.255l.319-.094c1.79-.527 1.79-3.065 0-3.592l-.319-.094a.873.873 0 0 1-.52-1.255l.16-.292c.893-1.64-.902-3.433-2.541-2.54l-.292.159a.873.873 0 0 1-1.255-.52l-.094-.319zm-2.633.283c.246-.835 1.428-.835 1.674 0l.094.319a1.873 1.873 0 0 0 2.693 1.115l.291-.16c.764-.415 1.6.42 1.184 1.185l-.159.292a1.873 1.873 0 0 0 1.116 2.692l.318.094c.835.246.835 1.428 0 1.674l-.319.094a1.873 1.873 0 0 0-1.115 2.693l.16.291c.415.764-.42 1.6-1.185 1.184l-.291-.159a1.873 1.873 0 0 0-2.693 1.116l-.094.318c-.246.835-1.428.835-1.674 0l-.094-.319a1.873 1.873 0 0 0-2.692-1.115l-.292.16c-.764.415-1.6-.42-1.184-1.185l.159-.291A1.873 1.873 0 0 0 1.945 8.93l-.319-.094c-.835-.246-.835-1.428 0-1.674l.319-.094A1.873 1.873 0 0 0 3.06 4.377l-.16-.292c-.415-.764.42-1.6 1.185-1.184l.292.159a1.873 1.873 0 0 0 2.692-1.115l.094-.319z"/>
          </svg>
          Logs
        </button>
      </td>
      <td role="service-delete" style="cursor: pointer;">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x-square"
          viewBox="0 0 16 16">
          <path
            d="M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z">
          </path>
          <path
            d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z">
          </path>
        </svg>
      </td>
    </tr>
    <tr class="service-logs">
      <td colspan="100%">
        <div class="collapse">
          <pre class="p-3" style="background-color: rgb(0, 0, 0); font-family: monospace; color: antiquewhite; font-size: smaller;">Loading...</pre>
      </td>
    </tr>
  </template>

  <nav class="navbar navbar-light bg-light mb-5">
    <div class="container">
      <a class="navbar-brand" href="/">
        <img src="images/logo.svg" alt="" height="40" class="d-inline-table-cell align-text-top">
      </a>
      <span class="badge bg-primary mt-2">Dashboard</span>
      <div class="ms-auto">
        <a class="btn btn-sm btn-dark px-3" href="/profile">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-person-circle" viewBox="0 0 16 16">
            <path d="M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0z"/>
            <path fill-rule="evenodd" d="M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1z"/>
          </svg>
        </a>
        <a href="/logout" class="btn btn-sm btn-primary mx-1">Logout</a>
      </div>
    </div>
  </nav>

  <div class="container" id="hero">
    <div id="chart-selector">
      <button id="chart-selector-gauge" class="btn btn-sm btn-primary mx-1">Gauge
        <svg xmlns="http://www.w3.org/2000/svg"  width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
          <path d="m 9.75 11 c 0 0.9656 -0.7844 1.75 -1.75 1.75 c -0.9656 0 -1.75 -0.7844 -1.75 -1.75 c 0 -0.6969 0.4094 -1.3 0.9719 -1.5813 v -5.6969 c 0 -0.3875 0.3625 -0.75 0.75 -0.75 c 0.4438 0 0.7781 0.3625 0.7781 0.75 v 5.6969 c 0.5906 0.2813 1 0.8844 1 1.5813 v 0 z m -5.75 -6 c 0 -0.5531 0.4469 -1 1 -1 c 0.5531 0 1 0.4469 1 1 c 0 0.5531 -0.4469 1 -1 1 c -0.5531 0 -1 -0.4469 -1 -1 z m 0.5 3 c 0 0.5531 -0.4469 1 -1 1 c -0.5522 0 -1 -0.4469 -1 -1 c 0 -0.5531 0.4478 -1 1 -1 c 0.5531 0 1 0.4469 1 1 z m 7 0 c 0 -0.5531 0.4469 -1 1 -1 c 0.5531 0 1 0.4469 1 1 c 0 0.5531 -0.4469 1 -1 1 c -0.5531 0 -1 -0.4469 -1 -1 z m 0.5 -3 c 0 0.5531 -0.4469 1 -1 1 c -0.5531 0 -1 -0.4469 -1 -1 c 0 -0.5531 0.4469 -1 1 -1 c 0.5531 0 1 0.4469 1 1 z m -12 3 c 0 -4.4188 3.5812 -8 8 -8 c 4.4187 0 8 3.5812 8 8 c 0 4.4187 -3.5813 8 -8 8 c -4.4188 0 -8 -3.5813 -8 -8 z m 8 6.5 c 3.5906 0 6.5 -2.9094 6.5 -6.5 c 0 -3.5906 -2.9094 -6.5 -6.5 -6.5 c -3.5906 0 -6.5 2.9094 -6.5 6.5 c 0 3.5906 2.9094 6.5 6.5 6.5 z"/>
        </svg>
      </button>
      <button id="chart-selector-series" class="btn btn-sm btn-primary mx-1">Timeseries
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
          <path d="m 1.5 12.75 c 0 0.4156 0.3359 0.75 0.75 0.75 h 13 c 0.4156 0 0.75 0.3344 0.75 0.75 c 0 0.4156 -0.3344 0.75 -0.75 0.75 h -13 c -1.2425 0 -2.25 -1.0062 -2.25 -2.25 v -11 c 0 -0.4141 0.3359 -0.75 0.75 -0.75 c 0.4141 0 0.75 0.3359 0.75 0.75 v 11 z m 9.0031 -3.2469 c -0.2656 0.3187 -0.7406 0.3187 -1.0344 0 l -2.4969 -2.4438 l -2.4688 2.4438 c -0.2656 0.3187 -0.7406 0.3187 -1.0344 0 c -0.2906 -0.2656 -0.2906 -0.7406 0 -1.0344 l 3 -3 c 0.1406 -0.1406 0.3312 -0.2188 0.5031 -0.2188 c 0.2281 0 0.4188 0.0781 0.5313 0.2188 l 2.4969 2.4719 l 3.7188 -3.7219 c 0.2937 -0.2906 0.7688 -0.2906 1.0344 0 c 0.3187 0.2938 0.3187 0.7687 0 1.0344 l -4.25 4.25 z"/>
        </svg>
      </button>
    </div>

    <div id="gauges" class="d-flex justify-content-evenly charts">
      <div class="chart-container">
        <canvas id="chart_doughnut_cpu"></canvas>
        <div id="chart_doughnut_cpu_center" class="center fs-1"></div>
      </div>
      <div class="chart-container">
        <canvas id="chart_doughnut_mem"></canvas>
        <div id="chart_doughnut_mem_center" class="center fs-1"></div>
      </div>
      <div class="chart-container">
        <canvas id="chart_doughnut_slots"></canvas>
        <div id="chart_doughnut_slots_center" class="center fs-1"></div>
      </div>

      <script>
        function get_center(value, max_value, unit, info, percent) {
          info = info ? (info + "<br><br>") : ""
          info = info + "do you want to <a href='/'>increase</a> this limit?"

          let usage = 0;
          let usage_unit = "";
          if (percent) {
            usage = Math.min(100, value / max_value * 100).toFixed(0)
            usage_unit = "%"
          } else {
            usage = value
          }

          let center = `${usage}<span class="fs-6">${usage_unit}</span>
            <div class="fs-6 text-muted">of ${max_value}${unit}
              <div class="info">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                  <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
                  <path d="M5.255 5.786a.237.237 0 0 0 .241.247h.825c.138 0 .248-.113.266-.25.09-.656.54-1.134 1.342-1.134.686 0 1.314.343 1.314 1.168 0 .635-.374.927-.965 1.371-.673.489-1.206 1.06-1.168 1.987l.003.217a.25.25 0 0 0 .25.246h.811a.25.25 0 0 0 .25-.25v-.105c0-.718.273-.927 1.01-1.486.609-.463 1.244-.977 1.244-2.056 0-1.511-1.276-2.241-2.673-2.241-1.267 0-2.655.59-2.75 2.286zm1.557 5.763c0 .533.425.927 1.01.927.609 0 1.028-.394 1.028-.927 0-.552-.42-.94-1.029-.94-.584 0-1.009.388-1.009.94z"/>
                </svg>
                <span class="info-popup"><div class="info-popup-content">${info}</div></span>
              </div>
            </div>`

            return center;
        }

        (function(){
          const center = document.getElementById('chart_doughnut_cpu_center');
          const chart = new Chart(document.getElementById('chart_doughnut_cpu').getContext('2d'), {
            type: 'doughnut',
            data: {
              labels: [
                'in use',
                'available'
              ],
              datasets: [{
                data: [NaN, NaN],
                backgroundColor: [
                  'rgb(13, 110, 253)',
                  'rgb(215, 215, 215)'
                ],
                hoverOffset: 4
              }]
            },
            options: { 
              cutout: 85,
              layout: {
                  padding: {
                      top: 20
                  }
              },
              plugins: {
                  title: {
                      display: true,
                      text: 'CPU usage'
                  },
                  legend: {
                    position: 'bottom'
                  }
              }
            }
          });
          function update() {
            const info = "CPU usage is the sum of cpu used by all services, it is measured in millicores.";

            // get cpu usage average
            const data = stats.cpu.splice(-2);

            let avg = 0
            if (data.length > 0)
              avg = data.reduce((a, b) => a + b.value, 0) / data.length;

            chart.data.datasets[0].data = [avg, limits.cpu-avg]
            chart.update();

            
            center.innerHTML = get_center(avg, limits.cpu, 'm', info, true);
          }

          document.addEventListener('stats_update', update);
        })();

        (function() {
          const center = document.getElementById('chart_doughnut_mem_center');
          const chart = new Chart(document.getElementById('chart_doughnut_mem').getContext('2d'), {
            type: 'doughnut',
            data: {
              labels: [
                'in use',
                'available'
              ],
              datasets: [{
                data: [NaN, NaN],
                backgroundColor: [
                  'rgb(13, 110, 253)',
                  'rgb(215, 215, 215)'
                ],
                hoverOffset: 4
              }]
            },
            options: { 
              cutout: 85,
              layout: {
                  padding: {
                      top: 20
                  }
              },
              plugins: {
                  title: {
                      display: true,
                      text: 'RAM usage'
                  },
                  legend: {
                    position: 'bottom'
                  }
              }
            }
          });
          function update() {
            const info = "RAM usage is the sum of volatile memory used by all services, it is measured in Mebibytes.";

            // get mem usage average
            const data = stats.mem.splice(-2);

            let avg = 0
            if (data.length > 0)
              avg = data.reduce((a, b) => a + b.value, 0) / data.length;

            chart.data.datasets[0].data = [avg.toFixed(0), limits.mem-avg]
            chart.update();

            center.innerHTML = get_center(avg, limits.mem, 'Mi', info, true);
          }

          document.addEventListener('limits_update', function() {
            document.addEventListener('stats_update', update);
          });
        })();

        (function() {
          const center = document.getElementById('chart_doughnut_slots_center');
          const chart = new Chart(document.getElementById('chart_doughnut_slots').getContext('2d'), {
            type: 'doughnut',
            data: {
              labels: [
                'in use',
                'available'
              ],
              datasets: [{
                data: [],
                backgroundColor: [
                  'rgb(13, 110, 253)',
                  'rgb(215, 215, 215)'
                ],
                hoverOffset: 4
              }]
            },
            options: { 
              cutout: 85,
              layout: {
                  padding: {
                      top: 20
                  }
              },
              plugins: {
                  title: {
                      display: true,
                      text: 'Slots'
                  },
                  legend: {
                    position: 'bottom'
                  }
              }
            }
          });
          function update() {
            const info = "The number of slots corresponds to the maximum number of services that can you run at the same time.";

            // get slots usage
            let active_services = 0;
            Object.values(services).forEach(service => {
              if (service.active)
                active_services += 1;
            });

            chart.data.datasets[0].data = [active_services, limits.slots-active_services]
            chart.update();

            center.innerHTML = get_center(active_services, limits.slots, ' slots', info, false);
          }
          document.addEventListener('limits_update', function() {
            document.addEventListener('services_update', update)
          });
        })();
      </script>
    </div>

    <div id="series" class="d-none charts">
      <canvas id="chart_line_cpu"></canvas>
      <script>
        (function(){
          const chart = new Chart(document.getElementById('chart_line_cpu').getContext('2d'), {
            type: 'line',
            data: {
              datasets: [{
                label: 'cpu',
                data: [],
                backgroundColor: [
                  'rgb(13, 110, 253)'
                ],
                borderColor: 'rgb(13, 110, 253)',
                hoverOffset: 4,
              },
              {
                label: 'ram',
                data: [],
                backgroundColor: [
                  'rgb(33, 37, 41)'
                ],
                borderColor: 'rgb(33, 37, 41)',
                hoverOffset: 4,
              },
              /*{
                label: 'net snd',
                data: [],
                backgroundColor: [
                  'rgb(13, 110, 253)'
                ],
                hoverOffset: 4,
              },
              {
                label: 'net rcv',
                data: [],
                backgroundColor: [
                  'rgb(13, 110, 253)'
                ],
                hoverOffset: 4,
              }*/]
            },
            options: { 
              maintainAspectRatio: false,
              animation: false,
              elements: {
                line: {
                  tension: 0.1,
                  borderWidth: 2
                },
                point: {
                  pointRadius: 2,
                }
              },
              scales: {
                y: {
                  min: 0,
                  max: 100,
                  ticks: {
                    stepSize: 25,
                    callback: function(value, index, values) {
                      return value + '%';
                    }
                  }
                },
                x: {
                  type: 'time',
                }
              },
              layout: {
                  padding: {
                      top: 20
                  }
              },
              plugins: {
                  title: {
                      display: true,
                      text: 'Resources usage'
                  },
                  legend: {
                    display: true,
                    position: 'bottom',
                    align: 'end'
                  }
              }
            }
          });
          function update() {
            chart.data.datasets[0].data = stats.cpu.map(elem => {return {x: elem.time, y: elem.value * 100 / limits.cpu}});
            chart.data.datasets[1].data = stats.mem.map(elem => {return {x: elem.time, y: elem.value * 100 / limits.mem}});
            //chart.data.datasets[2].data = stats.net_snd.map(elem => {return {x: elem.time, y: elem.value}});
            //chart.data.datasets[3].data = stats.net_rcv.map(elem => {return {x: elem.time, y: elem.value}});
            chart.update();
          }

          document.addEventListener('stats_update', update);
        })();
      </script>
    </div>

    <script>
      document.getElementById('chart-selector-gauge').onclick = function() {
        document.getElementById('gauges').classList.remove('d-none');
        document.getElementById('series').classList.add('d-none');
      }

      document.getElementById('chart-selector-series').onclick = function() {
        document.getElementById('series').classList.remove('d-none');
        document.getElementById('gauges').classList.add('d-none');
      }
    </script>

    <table class="table table-hover text-nowrap align-middle" id="services-table">
      <thead>
        <tr>
          <th class="col-2"></th>
          <th class="col-6">Service name</th>
          <th class="col-12 d-none d-lg-table-cell">URL</th>
          <th class="col-3"></th>
          <th class="col-3"></th>
          <th class="col-3"></th>
          <th class="col-3"></th>
        </tr>
      </thead>
      <tbody>
        <tr class="text-muted">
          <td>
            -
          </td>
          <td class="">
            <div class="input-group input-group-sm">
              <form action="javascript:void(0);" onsubmit="open_service_settings();">
                <input id="serviceNameInput" type="text" maxlength="16" class="form-control" placeholder="Service Name" pattern="[0-9a-z][0-9a-z-]+" title="must consist of lowercase alphanumeric characters or '-'" required>
              </form>
            </div>
          </td>
          <td class="d-none d-lg-table-cell">
            -
          </td>
          <td>
            -
          </td>
          <td>
            <button class="btn btn-sm btn-outline-secondary disabled mx-1">
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-gear my-1" viewBox="0 0 16 16">
                <path d="M8 4.754a3.246 3.246 0 1 0 0 6.492 3.246 3.246 0 0 0 0-6.492zM5.754 8a2.246 2.246 0 1 1 4.492 0 2.246 2.246 0 0 1-4.492 0z"/>
                <path d="M9.796 1.343c-.527-1.79-3.065-1.79-3.592 0l-.094.319a.873.873 0 0 1-1.255.52l-.292-.16c-1.64-.892-3.433.902-2.54 2.541l.159.292a.873.873 0 0 1-.52 1.255l-.319.094c-1.79.527-1.79 3.065 0 3.592l.319.094a.873.873 0 0 1 .52 1.255l-.16.292c-.892 1.64.901 3.434 2.541 2.54l.292-.159a.873.873 0 0 1 1.255.52l.094.319c.527 1.79 3.065 1.79 3.592 0l.094-.319a.873.873 0 0 1 1.255-.52l.292.16c1.64.893 3.434-.902 2.54-2.541l-.159-.292a.873.873 0 0 1 .52-1.255l.319-.094c1.79-.527 1.79-3.065 0-3.592l-.319-.094a.873.873 0 0 1-.52-1.255l.16-.292c.893-1.64-.902-3.433-2.541-2.54l-.292.159a.873.873 0 0 1-1.255-.52l-.094-.319zm-2.633.283c.246-.835 1.428-.835 1.674 0l.094.319a1.873 1.873 0 0 0 2.693 1.115l.291-.16c.764-.415 1.6.42 1.184 1.185l-.159.292a1.873 1.873 0 0 0 1.116 2.692l.318.094c.835.246.835 1.428 0 1.674l-.319.094a1.873 1.873 0 0 0-1.115 2.693l.16.291c.415.764-.42 1.6-1.185 1.184l-.291-.159a1.873 1.873 0 0 0-2.693 1.116l-.094.318c-.246.835-1.428.835-1.674 0l-.094-.319a1.873 1.873 0 0 0-2.692-1.115l-.292.16c-.764.415-1.6-.42-1.184-1.185l.159-.291A1.873 1.873 0 0 0 1.945 8.93l-.319-.094c-.835-.246-.835-1.428 0-1.674l.319-.094A1.873 1.873 0 0 0 3.06 4.377l-.16-.292c-.415-.764.42-1.6 1.185-1.184l.292.159a1.873 1.873 0 0 0 2.692-1.115l.094-.319z"/>
              </svg>
              Edit
            </button>
          </td>
          <td>
            <button class="btn btn-sm btn-outline-secondary disabled mx-1">
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-gear my-1" viewBox="0 0 16 16">
                <path d="M8 4.754a3.246 3.246 0 1 0 0 6.492 3.246 3.246 0 0 0 0-6.492zM5.754 8a2.246 2.246 0 1 1 4.492 0 2.246 2.246 0 0 1-4.492 0z"/>
                <path d="M9.796 1.343c-.527-1.79-3.065-1.79-3.592 0l-.094.319a.873.873 0 0 1-1.255.52l-.292-.16c-1.64-.892-3.433.902-2.54 2.541l.159.292a.873.873 0 0 1-.52 1.255l-.319.094c-1.79.527-1.79 3.065 0 3.592l.319.094a.873.873 0 0 1 .52 1.255l-.16.292c-.892 1.64.901 3.434 2.541 2.54l.292-.159a.873.873 0 0 1 1.255.52l.094.319c.527 1.79 3.065 1.79 3.592 0l.094-.319a.873.873 0 0 1 1.255-.52l.292.16c1.64.893 3.434-.902 2.54-2.541l-.159-.292a.873.873 0 0 1 .52-1.255l.319-.094c1.79-.527 1.79-3.065 0-3.592l-.319-.094a.873.873 0 0 1-.52-1.255l.16-.292c.893-1.64-.902-3.433-2.541-2.54l-.292.159a.873.873 0 0 1-1.255-.52l-.094-.319zm-2.633.283c.246-.835 1.428-.835 1.674 0l.094.319a1.873 1.873 0 0 0 2.693 1.115l.291-.16c.764-.415 1.6.42 1.184 1.185l-.159.292a1.873 1.873 0 0 0 1.116 2.692l.318.094c.835.246.835 1.428 0 1.674l-.319.094a1.873 1.873 0 0 0-1.115 2.693l.16.291c.415.764-.42 1.6-1.185 1.184l-.291-.159a1.873 1.873 0 0 0-2.693 1.116l-.094.318c-.246.835-1.428.835-1.674 0l-.094-.319a1.873 1.873 0 0 0-2.692-1.115l-.292.16c-.764.415-1.6-.42-1.184-1.185l.159-.291A1.873 1.873 0 0 0 1.945 8.93l-.319-.094c-.835-.246-.835-1.428 0-1.674l.319-.094A1.873 1.873 0 0 0 3.06 4.377l-.16-.292c-.415-.764.42-1.6 1.185-1.184l.292.159a1.873 1.873 0 0 0 2.692-1.115l.094-.319z"/>
              </svg>
              Logs
            </button>
          </td>
          <td style="cursor: pointer;" class="text-dark" onclick="open_service_settings()">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
              class="bi bi-plus-square-fill my-2" viewBox="0 0 16 16">
              
            </svg>
          </td>
        </tr>
      </tbody>
    </table>
  </div>
  <div class="modal fade" id="serviceSettings" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Service configuration</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form action="javascript:void(0);" onsubmit="saveServiceSettings(this);" onchange="(function(e){t=e.target;if(t.type=='text'){e.target.value=e.target.value.trim();}})(event);">
              <div class="modal-body">
                <div class="row g-3 align-items-center mb-3">
                  <input type="text" name="name" value="" style="display: none;">
                  <div class="col-auto col-2">
                    <label class="col-form-label">Replicas</label>
                  </div>
                  <div class="col-auto">
                    <input type="number" step="1" min="1" max="5" name="replicas" class="form-control" value="1" pattern="[0-9]+" required>
                  </div>
                  <div class="col-auto">
                    <span class="form-text">
                      Horizontal pod autoscaler
                    </span>
                  </div>
                </div>
                
                <div class="row g-3 align-items-center mb-3">
                  <div class="col-auto col-2">
                    <label class="col-form-label">Port</label>
                  </div>
                  <div class="col-auto">
                    <input type="number" step="1" min="1" max="65535" name="port" class="form-control" placeholder="80" required>
                  </div>
                  <div class="col-auto">
                    <span class="form-text">
                      Port exposed by the service
                    </span>
                  </div>
                </div>

                <div class="row g-3 align-items-center mb-3">
                  <div class="col-auto col-2">
                    <label class="col-form-label">Image</label>
                  </div>
                  <div class="col-auto">
                    <input type="text" name="image" class="form-control" placeholder="nginx"
                      pattern="^(?<repository>[\w.\-_]+((?::\d+|)(?=\/[a-z0-9._-]+\/[a-z0-9._-]+))|)(?:\/|)(?<user>[a-z0-9.\-_]+)(?<image>(?:\/[a-z0-9.\-_]+|))(:(?<tag>[\w.\-_]{1,127})|)$"
                      title="must be a valid container image (and tag)"
                      required>
                  </div>
                  <div class="col-auto">
                    <span class="form-text">
                      Container image from any public repository
                    </span>
                  </div>
                </div>

                <div class="row g-3 align-items-center mb-3">
                  <div class="col-auto col-2">
                    <label class="col-form-label">Command</label>
                  </div>
                  <div class="col-auto">
                    <input type="text" name="command" class="form-control" placeholder="default" title="">
                  </div>
                  <div class="col-auto">
                    <span class="form-text">
                      Override the container entrypoint
                    </span>
                  </div>
                  <div class="col-auto">
                  </div>
                </div>

                <div class="row g-3 align-items-center mb-3">
                  <div class="col-auto col-2">
                    <label class="col-form-label">Arguments</label>
                  </div>
                  <div class="col-auto">
                    <input type="text" name="args" class="form-control" placeholder="" title="">
                  </div>
                  <div class="col-auto">
                    <span class="form-text">
                      Custom arguments for the entrypoint
                    </span>
                  </div>
                  <div class="col-auto">
                  </div>
                </div>
              </div>
              <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="submit" class="btn btn-primary" type="submit">Save changes</button>
              </div>
            </form>

        </div>
    </div>
  </div>
  <script type="application/javascript" src="/js/live-reloading.js"></script>
  <script type="application/javascript">
    // Quality of life logic for input handling
    document.querySelectorAll("form input[type='number']").forEach(function(elem){
      elem.addEventListener("focus", function() {
        this.oldValue = this.value;
      });
      elem.addEventListener("input", function(e) {
        // Check if input contains only numbers
        if(!this.value.match(/^[0-9]+$/)){
          this.value = this.oldValue;
        }
      });
    });
    document.querySelectorAll("form input[type='text']").forEach(function(elem){
      elem.addEventListener("input", function(e) {
        // Remove leading and trailing whitespace
        this.value = this.value.trim();
      });
    });
  </script>
  <script type="application/javascript">
    update_limits().then(() => {
      update_service_table();
      update_service_following_logs();
      update_stats();

      setInterval(() => update_service_table(), 1000);
      setInterval(() => update_service_following_logs(), 1000);
      setInterval(() => update_stats(), 1000 * 20);
    });
  </script>
</body>

</html>